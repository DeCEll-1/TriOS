name: Flutter CI

on:
  push:
    tags:
      - '*'

env:
  flutter_channel: "stable"
  macos_path: "build/macos/Build/Products/Release/TriOS.app"
  windows_path: "build/windows/x64/runner/Release/*"
#  linux_path: "build/linux/runner/Release/*"

jobs:
  upload-release:
    runs-on: ubuntu-latest
    needs: [ build-macos,
      #            build-linux,
             build-windows ]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: Fetch Tags
        run: git fetch --prune --unshallow --tags

      #         Tags starting with 0 or with unstable, dev, qa, prerelease, or rc in them will be marked as prerelease.
      - name: Set Variables
        run: |
          echo "VERSION=$(git describe --tags)" >> $GITHUB_ENV
          git log --format=%B -n 1 $(git log -1 --pretty=format:"%h") | cat - > changes.txt
          prerelease_regex=".*dev|qa|rc|prerelease|unstable.*"
          if [[ "$(git describe --tags)" =~ $prerelease_regex ]]; then
            echo "IS_PRERELEASE=true" >> $GITHUB_ENV;
          else
            echo "IS_PRERELEASE=false" >> $GITHUB_ENV;
          fi

      - name: 'Create GitHub release from a tag'
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          commit: '${{ github.sha }}'
          name: ${{ env.VERSION }}
          tag: ${{ env.VERSION }}
          bodyFile: changes.txt
          draft: false
          prerelease: '${{ env.IS_PRERELEASE }}'

      - name: Download Artifacts
        uses: actions/download-artifact@v1
        with:
          name: uploads

      - name: Upload macOS Artifact
        id: upload-macos
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./uploads/TriOS-MacOS.zip
          asset_name: TriOS-MacOS.zip
          asset_content_type: application/zip

      - name: Upload Windows Artifact
        id: upload-windows
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./uploads/TriOS-Windows.zip
          asset_name: TriOS-Windows.zip
          asset_content_type: application/zip

  #      - name: upload linux
  #        id: upload-linux
  #        uses: actions/upload-release-asset@v1.0.1
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #        with:
  #          upload_url: ${{ steps.create_release.outputs.upload_url }}
  #          asset_path: ./uploads/linux.zip
  #          asset_name: linux.zip
  #          asset_content_type: application/zip

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          architecture: x64
          cache: true
      - run: flutter --version
      - run: flutter upgrade
      - run: flutter config --enable-macos-desktop
      - run: flutter build macos
      - name: Prepare TriOS Directory
        run: |
          if [ -d "${{ env.macos_path }}" ]; then
            mkdir -p TriOS
            mv ${{ env.macos_path }} TriOS/
          else
            echo "Error: macOS build path not found"
            exit 1
          fi
      - name: Zip macOS Artifact
        run: |
          if [ -d "TriOS" ]; then
            zip -yr9 TriOS-MacOS.zip TriOS
          else
            echo "Error: TriOS directory not found"
            exit 1
          fi
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v1
        with:
          name: uploads
          path: TriOS-MacOS.zip

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          architecture: x64
          cache: true
      - run: flutter --version
      - run: flutter upgrade
      - run: flutter config --enable-windows-desktop
      - run: flutter build windows
      - name: Prepare TriOS Directory
        run: |
          mkdir TriOS
          move build\windows\runner\Release\* TriOS\
      - name: Zip TriOS Directory
        run: |
          if (Test-Path TriOS) {
            powershell Compress-Archive -Path TriOS -DestinationPath TriOS-Windows.zip
          } else {
            Write-Error "Error: TriOS directory not found"
            exit 1
          }
      - name: Upload Windows Artifact
        uses: actions/upload-artifact@v1
        with:
          name: uploads
          path: TriOS-Windows.zip


          #  build-linux:
          #
          #    runs-on: ubuntu-18.04
          #
          #    strategy:
          #      matrix:
          #        node-version: [12.x]
          #
          #    steps:
          #      - uses: actions/checkout@v1
          #      - name: Use Node.js ${{ matrix.node-version }}
          #        uses: actions/setup-node@v1
          #        with:
          #          node-version: ${{ matrix.node-version }}
          #      - name: npm install, build, and test
          #        run: |
          #          npm ci
          #          npm test
          #      - name: npm run build
          #        run: |
          #          npm run build
          #      - name: zip linux artifact
          #        run: |
          #          zip -r linux $linux_path
          #      - name: upload linux artifact
          #        uses: actions/upload-artifact@v1
          #        with:
          #          name: uploads
          #          path: $linux_path